apply plugin: 'com.android.application'

allprojects {
    repositories {
        //环信远程 maven仓库
        maven {
            url "https://raw.githubusercontent.com/HyphenateInc/Hyphenate-SDK-Android/master/repository"
        }
        flatDir {
            dirs 'libs', '../basis_component/libs'//第一个表示A模块本身的lib文件夹，第二个表示相对于A模块，c.jar所在的路径
        }
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

android {
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            // 新版签名机制
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    //Android6.0 中默认移除了 httpclient 的代码，用这个库兼容环信
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion 26

    defaultConfig {
        applicationId "com.android.maiguo.activity"
        minSdkVersion 20
        targetSdkVersion 26
        versionCode 5000
        versionName "5.0.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 突破65536
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                //阿里云依赖注解  https://github.com/alibaba/ARouter
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                // 新版打包需要
                includeCompileClasspath = true
            }
        }

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            //是否开启混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //Zipalign优化
            zipAlignEnabled true
            //debug模式
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            //是否开启混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
            //Zipalign优化
            zipAlignEnabled false
            //debug模式
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    packagingOptions {
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/NOTICE.txt")
        // 重复jar忽略
        exclude("META-INF/rxjava.properties")
    }

    // 增加编译内存空间
    dexOptions {
        incremental true
        maxProcessCount 2
        javaMaxHeapSize "8g"
    }

}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support:support-annotations:26.1.0') {
        force = true
    }
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //阿里云依赖注解 https://github.com/alibaba/ARouter
    implementation 'com.alibaba:arouter-api:1.4.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    if (!isBuildModule.toBoolean()) {
        compile project(':demo')
    }
    if (!isBuildModule.toBoolean()) {
        compile project(':guide_library')
    }
    if (!isBuildModule.toBoolean()) {
        compile project(':basis_component')
    }
    /*   if (!isBuildModule.toBoolean()) {
                compile project(':chat_library')
            }*/
    /*if (!isBuildModule.toBoolean()) {
        compile project(':map')
    }*/
    compile project(':basis_component')
    //环信SDK  http://docs-im.easemob.com/im/android/sdk/import
    compile 'com.hyphenate:hyphenate-sdk:3.3.0'
    //换肤 https://github.com/ximsfei/Android-skin-support
    compile 'skin.support:skin-support:2.1.5'
    // skin-support 基础控件支持
    compile 'skin.support:skin-support-design:1.2.5'
    // skin-support-design material design 控件支持[可选]
    compile 'skin.support:skin-support-cardview:1.2.0'
    // skin-support-cardview CardView 控件支持[可选]
    compile 'skin.support:skin-support-constraint-layout:1.0.2'


}
